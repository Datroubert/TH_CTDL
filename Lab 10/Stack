package Stack;

import java.util.Stack;

public class MyLIFO_App {
	// This method reserves the given array
	public static <E> void reserve(E[] array) {
		// TODO
		
		}
		// This method checks the correctness of the given input
		// i.e. ()(())[]{(())} ==> true, ){[]}() ==> false
		public static boolean isCorrect(String input) {
		// TODO
			Stack<Character> stack = new Stack<>();
			for (char c : input.toCharArray()) {
				if (c == '{' || c == '[' || c == '(' ) {
					stack.push(c);
				} else if (c == '}' && !stack.isEmpty() && stack.peek() == '{') {
					stack.pop();
				} else if (c == ']' && !stack.isEmpty() && stack.peek() == '[') {
					stack.pop();
				} else if (c == ')' && !stack.isEmpty() && stack.peek() == '(') {
					stack.pop();
				} else {
					return false;
					
				}
			}
		return stack.isEmpty();
		}
		// This method evaluates the value of an expression
		// i.e. 51 + (54 *(3+2)) = 321
		public static int evaluateExpression(String expression) {
			Stack<Integer> operandStack = new Stack<>();
			Stack<Character> operatorStack = new Stack<>();
			for (char c : expression.toCharArray()) {
				if (c== '+' || c == ' ' ) {
					
				}
				
			}
		return 0;
		}
		public static void main(String[] args) {
			Integer[] array = {1,2,3};
			reserve(array);
			for(Integer arr : array) {
				System.out.print(arr + "");
				
			}
			System.out.println();
			System.out.println(isCorrect(""));
		}

}
